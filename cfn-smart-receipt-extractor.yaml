AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Extract info from receipts (PDF, image, Word), write to Excel, store in S3, trigger via Lambda. Secure and terminable.

Parameters:
  LambdaS3BucketName:
    Type: String
    Description: S3 bucket name to hold the input and output files

Resources:

  ## Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete  # ðŸ‘ˆ Ensures role and inline policy are deleted
    Properties:
      RoleName: !Sub "ReceiptProcessorLambdaRole-${AWS::StackName}"  # ðŸ‘ˆ Prevents name conflict
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: !Sub "ReceiptProcessingPolicy-${AWS::StackName}"  # ðŸ‘ˆ Prevents reuse issue
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub arn:aws:s3:::${LambdaS3BucketName}/*
              - Effect: Allow
                Action:
                  - textract:DetectDocumentText
                  - textract:AnalyzeDocument
                Resource: "*"

  ## Lambda Function
  ReceiptProcessorLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ReceiptProcessor
      Runtime: python3.11
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 120
      MemorySize: 256
      Code:
        S3Bucket: ueki-default       # ðŸ‘ˆ Change to your actual bucket name
        S3Key: script-repo/lambda/receipt_lambda.zip        # ðŸ‘ˆ Change if your ZIP is elsewhere

  ## Permission for S3 to invoke Lambda
  S3InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ReceiptProcessorLambda
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::${LambdaS3BucketName}

  ## S3 Bucket with Notification
  ReceiptBucket:
    Type: AWS::S3::Bucket
    DependsOn:
      - ReceiptProcessorLambda
      - S3InvokeLambdaPermission
    Properties:
      BucketName: !Ref LambdaS3BucketName
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: false
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt ReceiptProcessorLambda.Arn

  ## S3 Bucket Policy to allow Lambda access and enforce HTTPS
  ReceiptBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ReceiptBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowLambdaAccess
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - s3:GetObject
              - s3:PutObject
            Resource: !Sub arn:aws:s3:::${LambdaS3BucketName}/*
          - Sid: EnforceHTTPS
            Effect: Deny
            Principal: "*"
            Action: s3:*
            Resource: !Sub arn:aws:s3:::${LambdaS3BucketName}/*
            Condition:
              Bool:
                aws:SecureTransport: false

Outputs:
  LambdaFunction:
    Description: Lambda function processing uploaded receipts
    Value: !Ref ReceiptProcessorLambda

  S3Bucket:
    Description: S3 bucket for receipt upload and Excel output
    Value: !Ref ReceiptBucket
